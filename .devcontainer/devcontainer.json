{
  "name": "Azure AI Workshop",
  "image": "mcr.microsoft.com/devcontainers/python:3.12",
  
  "features": {
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.12",
      "installTools": true
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "lts"
    }
  },

  "customizations": {
    "vscode": {
      "settings": {
        "python.defaultInterpreterPath": "/workspaces/azure-ai-workshop/.venv/bin/python",
        "python.terminal.activateEnvironment": true,
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "jupyter.askForKernelRestart": false,
        "jupyter.interactiveWindow.collapseCellInputCode": "fromKeyboard",
        "notebook.cellToolbarLocation": {
          "default": "right",
          "jupyter-notebook": "left"
        },
        "files.associations": {
          "*.ipynb": "jupyter-notebook"
        }
      },
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.jupyter-renderers",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.vscode-jupyter-slideshow",
        "ms-vscode.vscode-json",
        "ms-azuretools.vscode-azureresourcegroups",
        "ms-vscode.azurecli",
        "charliermarsh.ruff",
        "tamasfe.even-better-toml",
        "ms-vscode.live-server",
        "GitHub.copilot",
        "GitHub.copilot-chat"
      ]
    }
  },

  "onCreateCommand": "bash .devcontainer/setup.sh",
  "postCreateCommand": "bash .devcontainer/post-create.sh",
  
  "forwardPorts": [8000, 8080, 8888, 5000],
  "portsAttributes": {
    "8888": {
      "label": "Jupyter Lab",
      "onAutoForward": "notify"
    },
    "8000": {
      "label": "Development Server",
      "onAutoForward": "notify"
    }
  },

  "remoteUser": "vscode",
  "containerUser": "vscode",
  
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ]
}
